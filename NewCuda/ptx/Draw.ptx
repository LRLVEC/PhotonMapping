//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_75
.address_size 64

	// .globl	__raygen__RayAllocator
.const .align 8 .b8 paras[32];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry __raygen__RayAllocator(

)
{
	.local .align 4 .b8 	__local_depot0[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .f32 	%f<128>;
	.reg .b32 	%r<116>;
	.reg .b64 	%rd<25>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd7, %SP, 28;
	add.u64 	%rd8, %SPL, 28;
	// inline asm
	call (%r38), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r39), _optix_get_launch_index_y, ();
	// inline asm
	mov.u64 	%rd9, 0;
	st.local.u32 	[%rd8+4], %rd9;
	st.local.u32 	[%rd8], %rd9;
	mov.u32 	%r41, 0;
	st.local.u32 	[%rd8+8], %r41;
	ld.const.v2.u32 	{%r42, %r43}, [paras+24];
	cvt.rn.f32.u32	%f1, %r38;
	cvt.rn.f32.u32	%f2, %r39;
	cvt.rn.f32.u32	%f21, %r42;
	cvt.rn.f32.u32	%f22, %r43;
	div.rn.f32 	%f23, %f1, %f21;
	div.rn.f32 	%f24, %f2, %f22;
	add.f32 	%f25, %f23, 0f00000000;
	mul.f32 	%f26, %f24, 0f429C774C;
	fma.rn.f32 	%f122, %f25, 0f414FD639, %f26;
	add.u64 	%rd1, %SPL, 0;
	abs.f32 	%f27, %f122;
	setp.neu.f32	%p1, %f27, 0f7F800000;
	@%p1 bra 	BB0_2;

	mov.f32 	%f28, 0f00000000;
	mul.rn.f32 	%f122, %f122, %f28;

BB0_2:
	mul.f32 	%f29, %f122, 0f3F22F983;
	cvt.rni.s32.f32	%r115, %f29;
	cvt.rn.f32.s32	%f30, %r115;
	neg.f32 	%f31, %f30;
	mov.f32 	%f32, 0f3FC90FDA;
	fma.rn.f32 	%f33, %f31, %f32, %f122;
	mov.f32 	%f34, 0f33A22168;
	fma.rn.f32 	%f35, %f31, %f34, %f33;
	mov.f32 	%f36, 0f27C234C5;
	fma.rn.f32 	%f123, %f31, %f36, %f35;
	abs.f32 	%f37, %f122;
	setp.leu.f32	%p2, %f37, 0f47CE4780;
	@%p2 bra 	BB0_13;

	mov.b32 	 %r4, %f122;
	shr.u32 	%r5, %r4, 23;
	shl.b32 	%r48, %r4, 8;
	or.b32  	%r6, %r48, -2147483648;
	mov.u64 	%rd23, __cudart_i2opi_f;
	mov.u32 	%r106, -6;
	mov.u64 	%rd24, %rd1;
	mov.u32 	%r107, %r41;

BB0_4:
	.pragma "nounroll";
	ld.const.u32 	%r51, [%rd23];
	// inline asm
	{
	mad.lo.cc.u32   %r49, %r51, %r6, %r107;
	madc.hi.u32     %r107, %r51, %r6,  0;
	}
	// inline asm
	st.local.u32 	[%rd24], %r49;
	add.s64 	%rd24, %rd24, 4;
	add.s64 	%rd23, %rd23, 4;
	add.s32 	%r106, %r106, 1;
	setp.ne.s32	%p3, %r106, 0;
	@%p3 bra 	BB0_4;

	and.b32  	%r54, %r5, 255;
	add.s32 	%r55, %r54, -128;
	shr.u32 	%r56, %r55, 5;
	and.b32  	%r11, %r4, -2147483648;
	st.local.u32 	[%rd1+24], %r107;
	mov.u32 	%r57, 6;
	sub.s32 	%r58, %r57, %r56;
	mul.wide.s32 	%rd12, %r58, 4;
	add.s64 	%rd6, %rd1, %rd12;
	ld.local.u32 	%r108, [%rd6];
	ld.local.u32 	%r109, [%rd6+-4];
	and.b32  	%r14, %r5, 31;
	setp.eq.s32	%p4, %r14, 0;
	@%p4 bra 	BB0_7;

	mov.u32 	%r59, 32;
	sub.s32 	%r60, %r59, %r14;
	shr.u32 	%r61, %r109, %r60;
	shl.b32 	%r62, %r108, %r14;
	add.s32 	%r108, %r61, %r62;
	ld.local.u32 	%r63, [%rd6+-8];
	shr.u32 	%r64, %r63, %r60;
	shl.b32 	%r65, %r109, %r14;
	add.s32 	%r109, %r64, %r65;

BB0_7:
	shr.u32 	%r66, %r109, 30;
	shl.b32 	%r67, %r108, 2;
	add.s32 	%r110, %r66, %r67;
	shl.b32 	%r20, %r109, 2;
	shr.u32 	%r68, %r110, 31;
	shr.u32 	%r69, %r108, 30;
	add.s32 	%r21, %r68, %r69;
	setp.eq.s32	%p5, %r68, 0;
	@%p5 bra 	BB0_8;

	not.b32 	%r70, %r110;
	neg.s32 	%r112, %r20;
	setp.eq.s32	%p6, %r20, 0;
	selp.u32	%r71, 1, 0, %p6;
	add.s32 	%r110, %r71, %r70;
	xor.b32  	%r111, %r11, -2147483648;
	bra.uni 	BB0_10;

BB0_8:
	mov.u32 	%r111, %r11;
	mov.u32 	%r112, %r20;

BB0_10:
	clz.b32 	%r114, %r110;
	setp.eq.s32	%p7, %r114, 0;
	shl.b32 	%r72, %r110, %r114;
	mov.u32 	%r73, 32;
	sub.s32 	%r74, %r73, %r114;
	shr.u32 	%r75, %r112, %r74;
	add.s32 	%r76, %r75, %r72;
	selp.b32	%r29, %r110, %r76, %p7;
	mov.u32 	%r77, -921707870;
	mul.hi.u32 	%r113, %r29, %r77;
	setp.eq.s32	%p8, %r11, 0;
	neg.s32 	%r78, %r21;
	selp.b32	%r115, %r21, %r78, %p8;
	setp.lt.s32	%p9, %r113, 1;
	@%p9 bra 	BB0_12;

	mul.lo.s32 	%r79, %r29, -921707870;
	shr.u32 	%r80, %r79, 31;
	shl.b32 	%r81, %r113, 1;
	add.s32 	%r113, %r80, %r81;
	add.s32 	%r114, %r114, 1;

BB0_12:
	mov.u32 	%r82, 126;
	sub.s32 	%r83, %r82, %r114;
	shl.b32 	%r84, %r83, 23;
	add.s32 	%r85, %r113, 1;
	shr.u32 	%r86, %r85, 7;
	add.s32 	%r87, %r86, 1;
	shr.u32 	%r88, %r87, 1;
	add.s32 	%r89, %r88, %r84;
	or.b32  	%r90, %r89, %r111;
	mov.b32 	 %f123, %r90;

BB0_13:
	mul.rn.f32 	%f9, %f123, %f123;
	and.b32  	%r37, %r115, 1;
	setp.eq.s32	%p10, %r37, 0;
	@%p10 bra 	BB0_15;

	mov.f32 	%f38, 0fBAB6061A;
	mov.f32 	%f39, 0f37CCF5CE;
	fma.rn.f32 	%f124, %f39, %f9, %f38;
	bra.uni 	BB0_16;

BB0_15:
	mov.f32 	%f40, 0f3C08839E;
	mov.f32 	%f41, 0fB94CA1F9;
	fma.rn.f32 	%f124, %f41, %f9, %f40;

BB0_16:
	@%p10 bra 	BB0_18;

	mov.f32 	%f42, 0f3D2AAAA5;
	fma.rn.f32 	%f43, %f124, %f9, %f42;
	mov.f32 	%f44, 0fBF000000;
	fma.rn.f32 	%f125, %f43, %f9, %f44;
	bra.uni 	BB0_19;

BB0_18:
	mov.f32 	%f45, 0fBE2AAAA3;
	fma.rn.f32 	%f46, %f124, %f9, %f45;
	mov.f32 	%f47, 0f00000000;
	fma.rn.f32 	%f125, %f46, %f9, %f47;

BB0_19:
	fma.rn.f32 	%f126, %f125, %f123, %f123;
	@%p10 bra 	BB0_21;

	mov.f32 	%f48, 0f3F800000;
	fma.rn.f32 	%f126, %f125, %f9, %f48;

BB0_21:
	and.b32  	%r91, %r115, 2;
	setp.eq.s32	%p13, %r91, 0;
	@%p13 bra 	BB0_23;

	mov.f32 	%f49, 0f00000000;
	mov.f32 	%f50, 0fBF800000;
	fma.rn.f32 	%f126, %f126, %f50, %f49;

BB0_23:
	mul.f32 	%f60, %f126, 0f472AEE8C;
	abs.f32 	%f61, %f60;
	cvt.rmi.f32.f32	%f62, %f61;
	sub.f32 	%f63, %f61, %f62;
	add.f32 	%f64, %f1, %f63;
	add.f32 	%f65, %f2, %f63;
	ld.const.v2.u32 	{%r101, %r102}, [paras+24];
	mov.u32 	%r97, 1;
	cvt.rn.f32.u32	%f66, %r101;
	cvt.rn.f32.u32	%f67, %r102;
	mul.f32 	%f68, %f66, 0f3F000000;
	mul.f32 	%f69, %f67, 0f3F000000;
	sub.f32 	%f70, %f64, %f68;
	sub.f32 	%f71, %f65, %f69;
	ld.const.u64 	%rd14, [paras+16];
	cvta.to.global.u64 	%rd15, %rd14;
	ld.global.v4.f32 	{%f72, %f73, %f74, %f75}, [%rd15];
	mul.f32 	%f80, %f71, %f73;
	fma.rn.f32 	%f81, %f70, %f72, %f80;
	ld.global.v4.f32 	{%f82, %f83, %f84, %f85}, [%rd15+48];
	fma.rn.f32 	%f87, %f85, %f74, %f81;
	fma.rn.f32 	%f88, %f75, 0f00000000, %f87;
	ld.global.v4.f32 	{%f89, %f90, %f91, %f92}, [%rd15+16];
	mul.f32 	%f97, %f71, %f90;
	fma.rn.f32 	%f98, %f70, %f89, %f97;
	fma.rn.f32 	%f99, %f85, %f91, %f98;
	fma.rn.f32 	%f100, %f92, 0f00000000, %f99;
	ld.global.v4.f32 	{%f101, %f102, %f103, %f104}, [%rd15+32];
	mul.f32 	%f109, %f71, %f102;
	fma.rn.f32 	%f110, %f70, %f101, %f109;
	fma.rn.f32 	%f111, %f85, %f103, %f110;
	fma.rn.f32 	%f112, %f104, 0f00000000, %f111;
	mul.f32 	%f113, %f100, %f100;
	fma.rn.f32 	%f114, %f88, %f88, %f113;
	fma.rn.f32 	%f115, %f112, %f112, %f114;
	sqrt.rn.f32 	%f116, %f115;
	rcp.rn.f32 	%f117, %f116;
	mul.f32 	%f54, %f88, %f117;
	mul.f32 	%f55, %f100, %f117;
	mul.f32 	%f56, %f112, %f117;
	shr.u64 	%rd17, %rd7, 32;
	cvt.u32.u64	%r99, %rd17;
	cvt.u32.u64	%r100, %rd7;
	ld.const.u64 	%rd13, [paras+8];
	mov.f32 	%f57, 0f3A83126F;
	mov.f32 	%f58, 0f5A0E1BCA;
	mov.f32 	%f59, 0f00000000;
	// inline asm
	call (%r92, %r93), _optix_trace_2, (%rd13, %f82, %f83, %f84, %f54, %f55, %f56, %f57, %f58, %f59, %r97, %r41, %r41, %r97, %r41, %r99, %r100);
	// inline asm
	ld.const.u64 	%rd18, [paras];
	cvta.to.global.u64 	%rd19, %rd18;
	mad.lo.s32 	%r105, %r101, %r39, %r38;
	mul.wide.u32 	%rd21, %r105, 16;
	add.s64 	%rd22, %rd19, %rd21;
	ld.local.f32 	%f118, [%rd8+8];
	ld.local.f32 	%f119, [%rd8+4];
	ld.local.f32 	%f120, [%rd8];
	mov.f32 	%f121, 0f3F800000;
	st.global.v4.f32 	[%rd22], {%f120, %f119, %f118, %f121};
	ret;
}

	// .globl	__closesthit__Ahh
.visible .entry __closesthit__Ahh(

)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<54>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	// inline asm
	call (%rd2), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd3, [%rd2];
	mul.wide.s32 	%rd4, %r1, 12;
	add.s64 	%rd5, %rd3, %rd4;
	ld.f32 	%f10, [%rd5];
	ld.f32 	%f11, [%rd5+4];
	ld.f32 	%f12, [%rd5+8];
	// inline asm
	call (%r2), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r3), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd6, %r2;
	cvt.u64.u32	%rd7, %r3;
	bfi.b64 	%rd1, %rd6, %rd7, 32, 32;
	add.f32 	%f13, %f10, 0f3F800000;
	add.f32 	%f14, %f11, 0f3F800000;
	add.f32 	%f15, %f12, 0f3F800000;
	mul.f32 	%f16, %f14, %f14;
	fma.rn.f32 	%f17, %f13, %f13, %f16;
	fma.rn.f32 	%f18, %f15, %f15, %f17;
	sqrt.rn.f32 	%f19, %f18;
	rcp.rn.f32 	%f20, %f19;
	mul.f32 	%f1, %f13, %f20;
	mul.f32 	%f2, %f14, %f20;
	mul.f32 	%f3, %f15, %f20;
	// inline asm
	call (%f9), _optix_get_ray_tmax, ();
	// inline asm
	rcp.rn.f32 	%f4, %f9;
	abs.f32 	%f5, %f4;
	setp.ltu.f32	%p1, %f5, 0f3F0CCCCD;
	@%p1 bra 	BB1_2;
	bra.uni 	BB1_1;

BB1_2:
	mul.f32 	%f36, %f4, %f4;
	mov.f32 	%f37, 0fBD57BE66;
	mov.f32 	%f38, 0f3C86A81B;
	fma.rn.f32 	%f39, %f38, %f36, %f37;
	mov.f32 	%f40, 0f3E08677B;
	fma.rn.f32 	%f41, %f39, %f36, %f40;
	mov.f32 	%f42, 0fBEAAAA29;
	fma.rn.f32 	%f43, %f41, %f36, %f42;
	mul.f32 	%f44, %f36, %f43;
	fma.rn.f32 	%f45, %f44, %f4, %f4;
	add.f32 	%f46, %f4, %f4;
	setp.eq.f32	%p3, %f4, 0f00000000;
	selp.f32	%f53, %f46, %f45, %p3;
	bra.uni 	BB1_3;

BB1_1:
	add.f32 	%f23, %f5, %f5;
	mul.f32 	%f24, %f23, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f25, %f24;
	mov.f32 	%f26, 0fBF317200;
	fma.rn.f32 	%f27, %f25, %f26, %f23;
	mov.f32 	%f28, 0fB5BFBE8E;
	fma.rn.f32 	%f29, %f25, %f28, %f27;
	mul.f32 	%f30, %f29, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f31, %f30;
	ex2.approx.f32 	%f32, %f25;
	mov.f32 	%f33, 0f3F800000;
	fma.rn.f32 	%f22, %f31, %f32, %f33;
	// inline asm
	rcp.approx.ftz.f32 %f21,%f22;
	// inline asm
	mov.f32 	%f34, 0fC0000000;
	fma.rn.f32 	%f35, %f21, %f34, %f33;
	mov.b32 	 %r4, %f35;
	setp.ltu.f32	%p2, %f5, 0f42B00000;
	selp.b32	%r5, %r4, 1065353216, %p2;
	mov.b32 	 %r6, %f4;
	and.b32  	%r7, %r6, -2147483648;
	or.b32  	%r8, %r5, %r7;
	mov.b32 	 %f53, %r8;

BB1_3:
	mul.f32 	%f47, %f1, 0f3F000000;
	mul.f32 	%f48, %f47, %f53;
	st.f32 	[%rd1], %f48;
	mul.f32 	%f49, %f2, 0f3F000000;
	mul.f32 	%f50, %f49, %f53;
	st.f32 	[%rd1+4], %f50;
	mul.f32 	%f51, %f3, 0f3F000000;
	mul.f32 	%f52, %f51, %f53;
	st.f32 	[%rd1+8], %f52;
	ret;
}

	// .globl	__miss__Ahh
.visible .entry __miss__Ahh(

)
{



	ret;
}


